{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to the ixo Protocol\n\n\nPlease have a look at the \nixo Foundation website\n for more information on what we do.\n\n\nAmply\n\n\nAmply is a MVP project that we have built to prove the utility of the ixo protocol.  The code for this project can be found on our \nAmply github repository\n.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-the-ixo-protocol",
            "text": "Please have a look at the  ixo Foundation website  for more information on what we do.",
            "title": "Welcome to the ixo Protocol"
        },
        {
            "location": "/#amply",
            "text": "Amply is a MVP project that we have built to prove the utility of the ixo protocol.  The code for this project can be found on our  Amply github repository .",
            "title": "Amply"
        },
        {
            "location": "/documentation/",
            "text": "Documentation\n\n\nThe ixo project is made up of five key repositories namely:\n\n\n\n\nschema\n \n\n\nixo-node\n\n\nixo-module\n \n\n\nixo-web\n \n\n\nmkdocs\n \ngithub\n\n\n\n\nSchema\n\n\ngithub\n\n\nA repository for holding schema templates for the ixo Protocol\n\n\nFolder Structure\n\n\n/projects\n - Project Templates\n\n\n/agents\n - Agent Templates\n\n\n/claims\n - Claim Templates\n\n\n/evaluations\n - Evaluation Templates\n\n\nTemplate Schemas\n\n\nAll Templates follow the \nJSON-LD\n structure examples can be found at \nSchema.org\n\n\nExample:\n\n\n{\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Organization\",\n  \"url\": \"http://www.example.com\",\n  \"name\": \"Unlimited Ball Bearings Corp.\",\n  \"contactPoint\": {\n    \"@type\": \"ContactPoint\",\n    \"telephone\": \"+1-401-555-1212\",\n    \"contactType\": \"Customer service\"\n  }\n}\n\n\n\n\nTemplates\n\n\nTemplates describe the labels, input type and the optionality of fields.  These are used on the client side for rendering schemas.\n\n\nTemplates consist of a single data element called \nentities\n which is an array of the fields/entities that need to be rendered on screen. Each entity has three mandatory values:\n\n\nlabel\n - The label for the input\n\n\nname\n - The name of the input which must be present in the schema and uses dot notation for complex types\n\n\ntype\n - The which describes how the input should be captured\n\n\noptional\n - Determines whether the entity is required or optional (Defaults to \nfalse\n)\n\n\noptions\n - Only used if the type is \nselect\n and contains a list of \nlabels\n and \nvalues\n.\n\n\nhidden\n - If \ntrue\n do not display this field.  Defaults to \nfalse\n\n\nExample:\n\n\n\"options\": [\n  {\n    \"label\": \"Identity Document\", \n    \"value\": \"id\"\n  },\n  {\n    \"label\": \"Passport\",\n    \"value\": \"passport\"\n  }\n]\n\n\n\n\nTemplate Types\n\n\ntext\n - Renders a text input\n\n\ntextarea\n - Renders a multiline text input\n\n\ncountry\n - Renders a selection box containing a list of country names and returns the (ISO 3166-2)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]\n\n\nselect\n - Generic selection box containing a list of options.  If this type is selected the \noption\n value must also be set.\n\n\nimage\n - Renders an image or allows one to be uploaded\n\n\nixo-Node\n\n\ngithub\n\n\nThe backend of the ixo protocol which defines the nodes that run the network\n\nTODO\n\n\nixo-Module\n\n\ngithub\n\n\nAn npm package that wrappers the communication to the ixo-node and provides usable services to a Javascript application.\n\nTODO\n\n\nixo-Web\n\n\ngithub\n\n\nA reference implemenation of a web frontend for the ixo protocol\n\nTODO\n\n\nmkdocs\n\n\ngithub\n\n\nThe repository contains the documentaion for the ixo system and is build using mkdocs.  It builds the content for this site.",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#documentation",
            "text": "The ixo project is made up of five key repositories namely:   schema    ixo-node  ixo-module    ixo-web    mkdocs   github",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#schema",
            "text": "github  A repository for holding schema templates for the ixo Protocol",
            "title": "Schema"
        },
        {
            "location": "/documentation/#folder-structure",
            "text": "/projects  - Project Templates  /agents  - Agent Templates  /claims  - Claim Templates  /evaluations  - Evaluation Templates",
            "title": "Folder Structure"
        },
        {
            "location": "/documentation/#template-schemas",
            "text": "All Templates follow the  JSON-LD  structure examples can be found at  Schema.org  Example:  {\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Organization\",\n  \"url\": \"http://www.example.com\",\n  \"name\": \"Unlimited Ball Bearings Corp.\",\n  \"contactPoint\": {\n    \"@type\": \"ContactPoint\",\n    \"telephone\": \"+1-401-555-1212\",\n    \"contactType\": \"Customer service\"\n  }\n}",
            "title": "Template Schemas"
        },
        {
            "location": "/documentation/#templates",
            "text": "Templates describe the labels, input type and the optionality of fields.  These are used on the client side for rendering schemas.  Templates consist of a single data element called  entities  which is an array of the fields/entities that need to be rendered on screen. Each entity has three mandatory values:  label  - The label for the input  name  - The name of the input which must be present in the schema and uses dot notation for complex types  type  - The which describes how the input should be captured  optional  - Determines whether the entity is required or optional (Defaults to  false )  options  - Only used if the type is  select  and contains a list of  labels  and  values .  hidden  - If  true  do not display this field.  Defaults to  false  Example:  \"options\": [\n  {\n    \"label\": \"Identity Document\", \n    \"value\": \"id\"\n  },\n  {\n    \"label\": \"Passport\",\n    \"value\": \"passport\"\n  }\n]",
            "title": "Templates"
        },
        {
            "location": "/documentation/#template-types",
            "text": "text  - Renders a text input  textarea  - Renders a multiline text input  country  - Renders a selection box containing a list of country names and returns the (ISO 3166-2)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]  select  - Generic selection box containing a list of options.  If this type is selected the  option  value must also be set.  image  - Renders an image or allows one to be uploaded",
            "title": "Template Types"
        },
        {
            "location": "/documentation/#ixo-node",
            "text": "github  The backend of the ixo protocol which defines the nodes that run the network TODO",
            "title": "ixo-Node"
        },
        {
            "location": "/documentation/#ixo-module",
            "text": "github  An npm package that wrappers the communication to the ixo-node and provides usable services to a Javascript application. TODO",
            "title": "ixo-Module"
        },
        {
            "location": "/documentation/#ixo-web",
            "text": "github  A reference implemenation of a web frontend for the ixo protocol TODO",
            "title": "ixo-Web"
        },
        {
            "location": "/documentation/#mkdocs",
            "text": "github  The repository contains the documentaion for the ixo system and is build using mkdocs.  It builds the content for this site.",
            "title": "mkdocs"
        },
        {
            "location": "/api/",
            "text": "API\n\n\nTODO\n\n\nixo-Node API\n\n\nThe ixo node uses JSON-RPC to receive client requests.  The structure of all calls follow the same structure:\n\n\nURI: \n<node server>/api/<entity>\n\n\nRequest type: \nPOST\n\n\nStructure: \n\n{\"jsonrpc\": \"2.0\", \"method\": \"<method name>\",  \"id\": <message id>,     \"params\": <json data object> }\n\n\n\n\n\n\n\n\nVariable\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<node server>\n\n\nThe URL of the server\n\n\n\n\n\n\n<entity>\n\n\nThe entity to send the method\n\n\n\n\n\n\n<method name>\n\n\nThe name of the method to call\n\n\n\n\n\n\n<message id>\n\n\nThe message ID, used to correlate asynchronous responses\n\n\n\n\n\n\n<json data object>\n\n\nThe parameters that are passed to the method handler\n\n\n\n\n\n\n\n\nStructure of params object\n\n\nEverything in the payload section is signed to create a signature.  It shoul dbe packed using \nJSON.stringify()\n method before signing. \n\n\n{\n    \"payload\": {\n        \"did\": <did|publicKey of user>,\n        \"data\": <request data>\n    },\n    \"signature\": {\n        \"type\": <signature type ECDSA or E25519>,\n        \"created\": <date of signature>,\n        \"creator\": <did|publicKey of user>,\n        \"signature\": <signature in hex>\n    }\n}\n\n\n\n\nNetwork\n\n\nExample URI: https://ixo-node.herokuapp.com/api/network\n\n\nPing\n\n\nPings the network to ensure connectivity.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"ping\", \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": \"pong\"}\n\n\n\n\nProject\n\n\nExample URI: https://ixo-node.herokuapp.com/api/project\n\n\nGet Template\n\n\nRetrieves the project template from the template registry.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\":<project template name>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}\n\n\n\n\nCreate Project\n\n\nCreates a new project.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\":{\n            \"did\":<did of user>,\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"data\": <project data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <project data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}\n\n\n\n\nList Projects\n\n\nLists all new projects.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"list\", \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}\n\n\n\n\nList Projects for a specific DID\n\n\nLists all projects owned by a specific DID.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}\n\n\n\n\nList Projects for a specific Agent DID and role\n\n\nLists all projects owned by a specific DID.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of agent>, \"role\": <role IA,EA or SA>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}\n\n\n\n\nTemplate\n\n\nExample URI: https://ixo-node.herokuapp.com/api/template\n\n\nGet Template\n\n\nRetrieves a template from the template registry. Valid types are: 'project', 'agent', claim' or 'evaluation'\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"type\": <template type>, \"name\": <name of template>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}\n\n\n\n\nAgent\n\n\nExample URI: https://ixo-node.herokuapp.com/api/agent\n\n\nGet Template\n\n\nRetrieves the agent template called \"default\" from the template registry.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\": <name of agent template>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}\n\n\n\n\nCreate Agent\n\n\nCreates a new agent.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": <agent data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}\n\n\n\n\nUpdate Agent Status\n\n\nUpdate Agent Status\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"updateAgentStatus\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            },\n            \"did\": <did of user>,\n            \"data\": {\n                agentTx: <tx of the agent to update>,\n                status: <Approved|NotApproved|Revoked|Pending>\n            }\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}\n\n\n\n\nList Agents for a specific DID\n\n\nLists all agents for a specific DID.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}\n\n\n\n\nList Agents for a specific Project ID\n\n\nLists all agents for a specific project id.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForProject\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project TX>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}\n\n\n\n\nClaim\n\n\nExample URI: https://ixo-node.herokuapp.com/api/claim\n\n\nGet Claim Template\n\n\nRetrieves the claim template called \"default\" from the template registry.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\": <name of claim template>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}\n\n\n\n\nCreate Claim\n\n\nCreates a new claim.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": <claim data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}\n\n\n\n\nEvaluate Claim\n\n\nEvaluate a new claim.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"evaluateClaim\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": {\n                claimTx: <tx of the claim>\n                <other evaluation data>\n            }\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n        \"latestEvaluation\": \"Approved\",\n        \"evaluations\": [{\n            <evaluation data>\n        }]\n    }\n}\n\n\n\n\nList Claims for a specific Project ID\n\n\nLists all claims for a specific agent did.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<agent did>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}\n\n\n\n\nList Claims for a specific Project ID\n\n\nLists all claims for a specific project id.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForProject\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project TX>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}\n\n\n\n\nLists all claims for a specific project ID and status.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForProjectAndDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project tx>,\"status\":<claim status>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}\n\n\n\n\nLists all claims for a specific project ID and agent DID.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForProjectAndDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project tx>,\"did\":<agent did>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}\n\n\n\n\nixo-Module API\n\n\nInstall using npm\n\n\nnpm install --save ixo-module\n\n\nCreate new Ixo Object (Without provider)\n\n\nimport Ixo from 'ixo-module';\nvar ixo = new Ixo('ixo_node_url')\n\n\n\n\nCreate new Ixo Object (With provider)\n\n\nimport Ixo from 'ixo-module';\nvar ixo = new Ixo('ixo_node_url', provider)\n\n\n\n\nCryptoUtil\n\n\nGenerate Mnemonic\n\n\nRequest:\n\n\nixo.cryptoUtil.generateMnemonic()\n\n\n\n\nResponse:\n\n\ndilemma allow swamp hedgehog client reject mistake spell involve index panda course\n\n\n\n\nGenerate SovrinDID\n\n\nRequest:\n\n\nixo.cryptoUtil.generateSovrinDID(mnemonic)\n\n\n\n\nResponse:\n\n\n{\n    \"did\": \"LuEoT1EkTVT7vaYP1ibvfw\",\n        \"verifyKey\": \"Br6jjwiPNBgDod4hHAKNP5AfA6ViV39eVX3UV4t9uADC\",\n            \"secret\": {\n                     \"seed\": \"b3cad338b23d0e58583ca243481262ee5f8632b14d713245e8b91be87daff073\",\n                     \"signKey\": \"D6qMjQCdjB8gHkEPyxXoyJTxkk5WK9egYQAEtJ6RX5fx\"\n    }\n}\n\n\n\n\nSign Document\n\n\nRequest:\n\n\nixo.cryptoUtil.getDocumentSignature(sdid.secret.signKey, sdid.verifyKey, JSON.stringify(testJson))\n\n\n\n\nResponse:\n\n\nDjoT6XqQ53J2kR4zd1shB17qFuM9DM5A2DAxQ3jjtgacvvpafWefHx54kkHewMVMTAsZm61wDCtzMV2TwkL7Fc5YdTc898X4tQ8SepthqyFBdMVs8fAt3fWDGD1fiVe5cymPCDcHwB6hP34DpQB3UAcfZSoPP2wxCbCLhTAF25RywqEWmcMDqF42pEqa9RonpF6AYGxYQt2tUKT9383HR6RhCkkbrkJSBwYQ6b4jsnysz23p4TPfahPKGWinGahXFwtZKD69SSjipzQNHWFXb5YuoqQcCToTFcEteQ3dtkDQdCcWFZ9N1\n\n\n\n\nValidate Signature\n\n\nRequest:\n\n\nixo.cryptoUtil.verifyDocumentSignature(signature, sdid.verifyKey)\n\n\n\n\nResponse:\n\n\ntrue/false\n\n\n\n\nNetwork\n\n\nPing ixo Server Node\n\n\nRequest:\n\n\nixo.network.pingIxoServerNode().then((result) => {\n    console.log('Ping Results: ' + result)})\n\n\n\n\n\nResponse:\n\n\nPing Results: {\n             \"jsonrpc\": \"2.0\",\n             \"id\": 1,\n             \"result\": \"pong\"\n     }\n\n\n\n\nProjects\n\n\nGets project template\n\n\nRequest:\n\n\n   ixo.project.getProjectTemplate('templateName').then((result) => {\n       console.log('Project Template: ' + result)\n   })\n\n\n\n\n\nResponse:\n\n\n   Project Template:\n   {\n      \"jsonrpc\":\"2.0\",\n      \"id\":1,\n      \"result\":{\n         \"template\":{\n            \"@context\":\"http://ixo.foundation/schema\",\n            \"@type\":\"Project\",\n            \"so\":\"http://schema.org/\",\n            \"name\":\"so:name\",\n            \"about\":\"so:about\",\n            \"country\":\"so:country\",\n            \"thumbnail\":{\n               \"@type\":\"ImageObject\",\n               \"contentUrl\":\"so:contentUrl\"\n            },\n            \"owner\":{\n               \"@type\":\"Person\",\n               \"email\":\"so:email\",\n               \"name\":\"so:name\"\n            }\n         },\n         \"form\":{\n            \"fields\":[\n               {\n                  \"label\":\"Project Name\",\n                  \"name\":\"name\",\n                  \"type\":\"text\"\n               },\n               {\n                  \"label\":\"About\",\n                  \"name\":\"about\",\n                  \"type\":\"textarea\"\n               },\n               {\n                  \"label\":\"Country\",\n                  \"name\":\"country\",\n                  \"type\":\"country\"\n               },\n               {\n                  \"label\":\"Thumbnail\",\n                  \"name\":\"thumbnail\",\n                  \"type\":\"image\"\n               },\n               {\n                  \"label\":\"Owner Name\",\n                  \"name\":\"owner.name\",\n                  \"type\":\"text\"\n               },\n               {\n                  \"label\":\"Owner email\",\n                  \"name\":\"owner.email\",\n                  \"type\":\"text\"\n               }\n            ]\n         }\n      }\n   }\n\n\n\n\nGets list of projects\n\n\nRequest:\n\n\n   ixo.project.listProjects().then((result) => {\n       console.log('Project List:  ' + result)\n   })\n\n\n\n\n\nResponse:\n\n\nProject List:\n{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"result\":[\n      {\n         \"_id\":\"5a61abec670a09001abf0560\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"f249310d2582927fc2019a94f96ca9df9a1c069bf3826bec89a4226a8201df4e\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:24.669Z\"\n      },\n      {\n         \"_id\":\"5a61abeb670a09001abf055e\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"77fc5cbdc2985aab2bda1754e36f9a879c29d98c0eb49394df07d40f306c3b65\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:23.679Z\"\n      },\n      {\n         \"_id\":\"5a61abea670a09001abf055c\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"a843e51f7e8787a669463bb0eeda7c2f4578fb501388ab2bc0ae3493012b086e\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:22.685Z\"\n      },\n      {\n         \"_id\":\"5a61abe8670a09001abf055a\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"02382076c5ae1b0478d32bf48f8e8f9b39049ae98d7fb573e346e72cd4d8242e\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:20.833Z\"\n      },\n      {\n         \"_id\":\"5a61abe7670a09001abf0558\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"d164ffd4d18add95eea273783c4b98e3046618d3c2009b01a19f935ab9f734ca\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:19.124Z\"\n      }\n   ]\n}\n\n\n\n\n\nList Project By DID\n\n\nRequest:\n\n\nixo.project.listProjectsByDid('did').then((response:any) => {\n            console.log('Projects by did: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });\n\n\n\n\nResponse:\n\n\nProjects by did: {\n        \"jsonrpc\": \"2.0\",\n        \"id\": 34773,\n        \"result\": [\n             {\n                \"_id\": \"5a86cd665989a8001ad3d6c0\",\n                \"name\": \"Test Project\",\n                \"about\": \"\",\n                \"country\": \"BD\",\n                \"thumbnail\": \"\",\n                \"agentTemplate\": \"default\",\n                \"claimTemplate\": \"default\",\n                \"evaluationTemplate\": \"default\",\n                \"tx\": \"8b630a062e38feeae73837a9da8f32cac2006b436792f905653555c24c2d83a2\",\n                \"__v\": 0,\n                \"owner\": {\n                        \"name\": \"Nicolaas\",\n                        \"email\": \"nicolaas.vercuiel73@gmail.com\",\n                        \"did\": \"0x8ce576f2cedd9cb87fe5768039f5edb4b5f9ed74\"\n                },\n                \"created\": \"2018-02-16T12:24:06.175Z\"\n        }\n        ]\n}\n\n\n\n\nCreate Project\n\n\nRequest:\n\n\n ixo.project.createProject(projectData, 'templateName').then((response: any) =>{\n            console.log('Project create response: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });\n\n\n\n\n\nResponse:\n\n\n Project create response: {\n        \"jsonrpc\": \"2.0\",\n        \"id\": 11460,\n        \"result\": {\n                \"__v\": 0,\n                \"name\": \"Reforestation\",\n                \"country\": \"UK\",\n                \"tx\": \"72a1e33c4c704e56dc497e5a7eec7367ff5bf51208a4e321e2b1d975b932a06f\",\n                \"_id\": \"5a8a87da79d282001a0203d2\",\n                \"owner\": {\n                        \"email\": \"peter@noname.com\",\n                        \"name\": \"Peter Piper\",\n                        \"did\": \"0x1805356a35b88414e75f7df9b9fd7d9555420785\"\n                },\n                \"created\": \"2018-02-19T08:16:26.787Z\"\n        }\n}\n\n\n\n\n\nAgent\n\n\nCreate Agent\n\n\nRequest:\n\n\n ixo.agent.createAgent(agentData, 'default').then((response: any) => {\n                  console.log('Agent create: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });\n\n\n\n\nGet Agent template\n\n\nRequest:\n\n\n ixo.agent.getAgentTemplate('default').then((response: any) => {\n            console.log('Agent template: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });\n\n\n\n\nList Agents for DID\n\n\nRequest:\n\n\nixo.agent.listAgentsForDID('did').then((response: any) => {\n            console.log('Agent list for DID: ' + success(JSON.stringify(response, null, '\\t')));\n            expect(response.result).to.not.equal(null);\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });\n\n\n\n\nList Agents for project\n\n\nRequest:\n\n\n ixo.agent.listAgentsForProject(ixo.credentialProvider.getDid(), 'projectTx').then((response: any) => {\n            console.log('Agent list for Project: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });\n\n\n\n\nUpdate Agent status\n\n\nRequest:\n\n\n   ixo.agent.updateAgentStatus(agentUpdate).then((response: any) => {\n            console.log('Agent status update: ' + success(JSON.stringify(response, null, '\\t')));\n            expect(response.result).to.not.equal(null);\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });",
            "title": "API"
        },
        {
            "location": "/api/#api",
            "text": "TODO",
            "title": "API"
        },
        {
            "location": "/api/#ixo-node-api",
            "text": "The ixo node uses JSON-RPC to receive client requests.  The structure of all calls follow the same structure:  URI:  <node server>/api/<entity>  Request type:  POST  Structure:  {\"jsonrpc\": \"2.0\", \"method\": \"<method name>\",  \"id\": <message id>,     \"params\": <json data object> }     Variable  Description      <node server>  The URL of the server    <entity>  The entity to send the method    <method name>  The name of the method to call    <message id>  The message ID, used to correlate asynchronous responses    <json data object>  The parameters that are passed to the method handler",
            "title": "ixo-Node API"
        },
        {
            "location": "/api/#structure-of-params-object",
            "text": "Everything in the payload section is signed to create a signature.  It shoul dbe packed using  JSON.stringify()  method before signing.   {\n    \"payload\": {\n        \"did\": <did|publicKey of user>,\n        \"data\": <request data>\n    },\n    \"signature\": {\n        \"type\": <signature type ECDSA or E25519>,\n        \"created\": <date of signature>,\n        \"creator\": <did|publicKey of user>,\n        \"signature\": <signature in hex>\n    }\n}",
            "title": "Structure of params object"
        },
        {
            "location": "/api/#network",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/network",
            "title": "Network"
        },
        {
            "location": "/api/#ping",
            "text": "Pings the network to ensure connectivity.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"ping\", \"id\": 1}  Response:  {\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": \"pong\"}",
            "title": "Ping"
        },
        {
            "location": "/api/#project",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/project",
            "title": "Project"
        },
        {
            "location": "/api/#get-template",
            "text": "Retrieves the project template from the template registry.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\":<project template name>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}",
            "title": "Get Template"
        },
        {
            "location": "/api/#create-project",
            "text": "Creates a new project.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\":{\n            \"did\":<did of user>,\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"data\": <project data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <project data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}",
            "title": "Create Project"
        },
        {
            "location": "/api/#list-projects",
            "text": "Lists all new projects.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"list\", \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}",
            "title": "List Projects"
        },
        {
            "location": "/api/#list-projects-for-a-specific-did",
            "text": "Lists all projects owned by a specific DID.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}",
            "title": "List Projects for a specific DID"
        },
        {
            "location": "/api/#list-projects-for-a-specific-agent-did-and-role",
            "text": "Lists all projects owned by a specific DID.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of agent>, \"role\": <role IA,EA or SA>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}",
            "title": "List Projects for a specific Agent DID and role"
        },
        {
            "location": "/api/#template",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/template",
            "title": "Template"
        },
        {
            "location": "/api/#get-template_1",
            "text": "Retrieves a template from the template registry. Valid types are: 'project', 'agent', claim' or 'evaluation'  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"type\": <template type>, \"name\": <name of template>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}",
            "title": "Get Template"
        },
        {
            "location": "/api/#agent",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/agent",
            "title": "Agent"
        },
        {
            "location": "/api/#get-template_2",
            "text": "Retrieves the agent template called \"default\" from the template registry.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\": <name of agent template>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}",
            "title": "Get Template"
        },
        {
            "location": "/api/#create-agent",
            "text": "Creates a new agent.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": <agent data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}",
            "title": "Create Agent"
        },
        {
            "location": "/api/#update-agent-status",
            "text": "Update Agent Status  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"updateAgentStatus\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            },\n            \"did\": <did of user>,\n            \"data\": {\n                agentTx: <tx of the agent to update>,\n                status: <Approved|NotApproved|Revoked|Pending>\n            }\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}",
            "title": "Update Agent Status"
        },
        {
            "location": "/api/#list-agents-for-a-specific-did",
            "text": "Lists all agents for a specific DID.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}",
            "title": "List Agents for a specific DID"
        },
        {
            "location": "/api/#list-agents-for-a-specific-project-id",
            "text": "Lists all agents for a specific project id.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForProject\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project TX>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}",
            "title": "List Agents for a specific Project ID"
        },
        {
            "location": "/api/#claim",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/claim",
            "title": "Claim"
        },
        {
            "location": "/api/#get-claim-template",
            "text": "Retrieves the claim template called \"default\" from the template registry.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\": <name of claim template>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}",
            "title": "Get Claim Template"
        },
        {
            "location": "/api/#create-claim",
            "text": "Creates a new claim.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": <claim data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}",
            "title": "Create Claim"
        },
        {
            "location": "/api/#evaluate-claim",
            "text": "Evaluate a new claim.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"evaluateClaim\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                \"name\": <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": {\n                claimTx: <tx of the claim>\n                <other evaluation data>\n            }\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n        \"latestEvaluation\": \"Approved\",\n        \"evaluations\": [{\n            <evaluation data>\n        }]\n    }\n}",
            "title": "Evaluate Claim"
        },
        {
            "location": "/api/#list-claims-for-a-specific-project-id",
            "text": "Lists all claims for a specific agent did.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<agent did>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}",
            "title": "List Claims for a specific Project ID"
        },
        {
            "location": "/api/#list-claims-for-a-specific-project-id_1",
            "text": "Lists all claims for a specific project id.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForProject\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project TX>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}",
            "title": "List Claims for a specific Project ID"
        },
        {
            "location": "/api/#lists-all-claims-for-a-specific-project-id-and-status",
            "text": "Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForProjectAndDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project tx>,\"status\":<claim status>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}",
            "title": "Lists all claims for a specific project ID and status."
        },
        {
            "location": "/api/#lists-all-claims-for-a-specific-project-id-and-agent-did",
            "text": "Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForProjectAndDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project tx>,\"did\":<agent did>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of claims>\n}",
            "title": "Lists all claims for a specific project ID and agent DID."
        },
        {
            "location": "/api/#ixo-module-api",
            "text": "",
            "title": "ixo-Module API"
        },
        {
            "location": "/api/#install-using-npm",
            "text": "npm install --save ixo-module",
            "title": "Install using npm"
        },
        {
            "location": "/api/#create-new-ixo-object-without-provider",
            "text": "import Ixo from 'ixo-module';\nvar ixo = new Ixo('ixo_node_url')",
            "title": "Create new Ixo Object (Without provider)"
        },
        {
            "location": "/api/#create-new-ixo-object-with-provider",
            "text": "import Ixo from 'ixo-module';\nvar ixo = new Ixo('ixo_node_url', provider)",
            "title": "Create new Ixo Object (With provider)"
        },
        {
            "location": "/api/#cryptoutil",
            "text": "Generate Mnemonic  Request:  ixo.cryptoUtil.generateMnemonic()  Response:  dilemma allow swamp hedgehog client reject mistake spell involve index panda course  Generate SovrinDID  Request:  ixo.cryptoUtil.generateSovrinDID(mnemonic)  Response:  {\n    \"did\": \"LuEoT1EkTVT7vaYP1ibvfw\",\n        \"verifyKey\": \"Br6jjwiPNBgDod4hHAKNP5AfA6ViV39eVX3UV4t9uADC\",\n            \"secret\": {\n                     \"seed\": \"b3cad338b23d0e58583ca243481262ee5f8632b14d713245e8b91be87daff073\",\n                     \"signKey\": \"D6qMjQCdjB8gHkEPyxXoyJTxkk5WK9egYQAEtJ6RX5fx\"\n    }\n}  Sign Document  Request:  ixo.cryptoUtil.getDocumentSignature(sdid.secret.signKey, sdid.verifyKey, JSON.stringify(testJson))  Response:  DjoT6XqQ53J2kR4zd1shB17qFuM9DM5A2DAxQ3jjtgacvvpafWefHx54kkHewMVMTAsZm61wDCtzMV2TwkL7Fc5YdTc898X4tQ8SepthqyFBdMVs8fAt3fWDGD1fiVe5cymPCDcHwB6hP34DpQB3UAcfZSoPP2wxCbCLhTAF25RywqEWmcMDqF42pEqa9RonpF6AYGxYQt2tUKT9383HR6RhCkkbrkJSBwYQ6b4jsnysz23p4TPfahPKGWinGahXFwtZKD69SSjipzQNHWFXb5YuoqQcCToTFcEteQ3dtkDQdCcWFZ9N1  Validate Signature  Request:  ixo.cryptoUtil.verifyDocumentSignature(signature, sdid.verifyKey)  Response:  true/false",
            "title": "CryptoUtil"
        },
        {
            "location": "/api/#network_1",
            "text": "Ping ixo Server Node  Request:  ixo.network.pingIxoServerNode().then((result) => {\n    console.log('Ping Results: ' + result)})  Response:  Ping Results: {\n             \"jsonrpc\": \"2.0\",\n             \"id\": 1,\n             \"result\": \"pong\"\n     }",
            "title": "Network"
        },
        {
            "location": "/api/#projects",
            "text": "Gets project template  Request:     ixo.project.getProjectTemplate('templateName').then((result) => {\n       console.log('Project Template: ' + result)\n   })  Response:     Project Template:\n   {\n      \"jsonrpc\":\"2.0\",\n      \"id\":1,\n      \"result\":{\n         \"template\":{\n            \"@context\":\"http://ixo.foundation/schema\",\n            \"@type\":\"Project\",\n            \"so\":\"http://schema.org/\",\n            \"name\":\"so:name\",\n            \"about\":\"so:about\",\n            \"country\":\"so:country\",\n            \"thumbnail\":{\n               \"@type\":\"ImageObject\",\n               \"contentUrl\":\"so:contentUrl\"\n            },\n            \"owner\":{\n               \"@type\":\"Person\",\n               \"email\":\"so:email\",\n               \"name\":\"so:name\"\n            }\n         },\n         \"form\":{\n            \"fields\":[\n               {\n                  \"label\":\"Project Name\",\n                  \"name\":\"name\",\n                  \"type\":\"text\"\n               },\n               {\n                  \"label\":\"About\",\n                  \"name\":\"about\",\n                  \"type\":\"textarea\"\n               },\n               {\n                  \"label\":\"Country\",\n                  \"name\":\"country\",\n                  \"type\":\"country\"\n               },\n               {\n                  \"label\":\"Thumbnail\",\n                  \"name\":\"thumbnail\",\n                  \"type\":\"image\"\n               },\n               {\n                  \"label\":\"Owner Name\",\n                  \"name\":\"owner.name\",\n                  \"type\":\"text\"\n               },\n               {\n                  \"label\":\"Owner email\",\n                  \"name\":\"owner.email\",\n                  \"type\":\"text\"\n               }\n            ]\n         }\n      }\n   }  Gets list of projects  Request:     ixo.project.listProjects().then((result) => {\n       console.log('Project List:  ' + result)\n   })  Response:  Project List:\n{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"result\":[\n      {\n         \"_id\":\"5a61abec670a09001abf0560\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"f249310d2582927fc2019a94f96ca9df9a1c069bf3826bec89a4226a8201df4e\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:24.669Z\"\n      },\n      {\n         \"_id\":\"5a61abeb670a09001abf055e\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"77fc5cbdc2985aab2bda1754e36f9a879c29d98c0eb49394df07d40f306c3b65\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:23.679Z\"\n      },\n      {\n         \"_id\":\"5a61abea670a09001abf055c\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"a843e51f7e8787a669463bb0eeda7c2f4578fb501388ab2bc0ae3493012b086e\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:22.685Z\"\n      },\n      {\n         \"_id\":\"5a61abe8670a09001abf055a\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"02382076c5ae1b0478d32bf48f8e8f9b39049ae98d7fb573e346e72cd4d8242e\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:20.833Z\"\n      },\n      {\n         \"_id\":\"5a61abe7670a09001abf0558\",\n         \"name\":\"Water Saving\",\n         \"country\":\"ZA\",\n         \"tx\":\"d164ffd4d18add95eea273783c4b98e3046618d3c2009b01a19f935ab9f734ca\",\n         \"__v\":0,\n         \"owner\":{\n            \"email\":\"joe@bloggs.com\",\n            \"name\":\"Joe Blogs\",\n            \"did\":\"0x92928b5135d8dbad88b1e772bf5b8f91bfe41a8d\"\n         },\n         \"created\":\"2018-01-19T08:27:19.124Z\"\n      }\n   ]\n}  List Project By DID  Request:  ixo.project.listProjectsByDid('did').then((response:any) => {\n            console.log('Projects by did: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });  Response:  Projects by did: {\n        \"jsonrpc\": \"2.0\",\n        \"id\": 34773,\n        \"result\": [\n             {\n                \"_id\": \"5a86cd665989a8001ad3d6c0\",\n                \"name\": \"Test Project\",\n                \"about\": \"\",\n                \"country\": \"BD\",\n                \"thumbnail\": \"\",\n                \"agentTemplate\": \"default\",\n                \"claimTemplate\": \"default\",\n                \"evaluationTemplate\": \"default\",\n                \"tx\": \"8b630a062e38feeae73837a9da8f32cac2006b436792f905653555c24c2d83a2\",\n                \"__v\": 0,\n                \"owner\": {\n                        \"name\": \"Nicolaas\",\n                        \"email\": \"nicolaas.vercuiel73@gmail.com\",\n                        \"did\": \"0x8ce576f2cedd9cb87fe5768039f5edb4b5f9ed74\"\n                },\n                \"created\": \"2018-02-16T12:24:06.175Z\"\n        }\n        ]\n}  Create Project  Request:   ixo.project.createProject(projectData, 'templateName').then((response: any) =>{\n            console.log('Project create response: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });  Response:   Project create response: {\n        \"jsonrpc\": \"2.0\",\n        \"id\": 11460,\n        \"result\": {\n                \"__v\": 0,\n                \"name\": \"Reforestation\",\n                \"country\": \"UK\",\n                \"tx\": \"72a1e33c4c704e56dc497e5a7eec7367ff5bf51208a4e321e2b1d975b932a06f\",\n                \"_id\": \"5a8a87da79d282001a0203d2\",\n                \"owner\": {\n                        \"email\": \"peter@noname.com\",\n                        \"name\": \"Peter Piper\",\n                        \"did\": \"0x1805356a35b88414e75f7df9b9fd7d9555420785\"\n                },\n                \"created\": \"2018-02-19T08:16:26.787Z\"\n        }\n}",
            "title": "Projects"
        },
        {
            "location": "/api/#agent_1",
            "text": "Create Agent  Request:   ixo.agent.createAgent(agentData, 'default').then((response: any) => {\n                  console.log('Agent create: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });  Get Agent template  Request:   ixo.agent.getAgentTemplate('default').then((response: any) => {\n            console.log('Agent template: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });  List Agents for DID  Request:  ixo.agent.listAgentsForDID('did').then((response: any) => {\n            console.log('Agent list for DID: ' + success(JSON.stringify(response, null, '\\t')));\n            expect(response.result).to.not.equal(null);\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });  List Agents for project  Request:   ixo.agent.listAgentsForProject(ixo.credentialProvider.getDid(), 'projectTx').then((response: any) => {\n            console.log('Agent list for Project: ' + success(JSON.stringify(response, null, '\\t')));\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });  Update Agent status  Request:     ixo.agent.updateAgentStatus(agentUpdate).then((response: any) => {\n            console.log('Agent status update: ' + success(JSON.stringify(response, null, '\\t')));\n            expect(response.result).to.not.equal(null);\n        }).catch((result: Error) => {\n            console.log(error(result));\n        });",
            "title": "Agent"
        }
    ]
}