{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to the ixo Protocol\n\n\nPlease have a look at the \nixo Foundation website\n for more information on what we do.\n\n\nAmply\n\n\nAmply is a MVP project that we have built to prove the utility of the ixo protocol.  The code for this project can be found on our \nAmply github repository\n.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-the-ixo-protocol",
            "text": "Please have a look at the  ixo Foundation website  for more information on what we do.",
            "title": "Welcome to the ixo Protocol"
        },
        {
            "location": "/#amply",
            "text": "Amply is a MVP project that we have built to prove the utility of the ixo protocol.  The code for this project can be found on our  Amply github repository .",
            "title": "Amply"
        },
        {
            "location": "/documentation/",
            "text": "Documentation\n\n\nThe ixo project is made up of five key repositories namely:\n\n\n\n\nschema\n \n\n\nixo-node\n\n\nixo-module\n \n\n\nixo-web\n \n\n\nmkdocs\n \ngithub\n\n\n\n\nSchema\n\n\ngithub\n\n\nA repository for holding schema templates for the ixo Protocol\n\n\nFolder Structure\n\n\n/projects\n - Project Templates\n\n\n/agents\n - Agent Templates\n\n\n/claims\n - Claim Templates\n\n\n/evaluations\n - Evaluation Templates\n\n\nTemplate Schemas\n\n\nAll Templates follow the \nJSON-LD\n structure examples can be found at \nSchema.org\n\n\nExample:\n\n\n{\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Organization\",\n  \"url\": \"http://www.example.com\",\n  \"name\": \"Unlimited Ball Bearings Corp.\",\n  \"contactPoint\": {\n    \"@type\": \"ContactPoint\",\n    \"telephone\": \"+1-401-555-1212\",\n    \"contactType\": \"Customer service\"\n  }\n}\n\n\n\n\nTemplates\n\n\nTemplates describe the labels, input type and the optionality of fields.  These are used on the client side for rendering schemas.\n\n\nTemplates consist of a single data element called \nentities\n which is an array of the fields/entities that need to be rendered on screen. Each entity has three mandatory values:\n\n\nlabel\n - The label for the input\n\n\nname\n - The name of the input which must be present in the schema and uses dot notation for complex types\n\n\ntype\n - The which describes how the input should be captured\n\n\noptional\n - Determines whether the entity is required or optional (Defaults to \nfalse\n)\n\n\noptions\n - Only used if the type is \nselect\n and contains a list of \nlabels\n and \nvalues\n.\n\n\nhidden\n - If \ntrue\n do not display this field.  Defaults to \nfalse\n\n\nExample:\n\n\n\"options\": [\n  {\n    \"label\": \"Identity Document\", \n    \"value\": \"id\"\n  },\n  {\n    \"label\": \"Passport\",\n    \"value\": \"passport\"\n  }\n]\n\n\n\n\nTemplate Types\n\n\ntext\n - Renders a text input\n\n\ntextarea\n - Renders a multiline text input\n\n\ncountry\n - Renders a selection box containing a list of country names and returns the (ISO 3166-2)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]\n\n\nselect\n - Generic selection box containing a list of options.  If this type is selected the \noption\n value must also be set.\n\n\nimage\n - Renders an image or allows one to be uploaded\n\n\nixo-Node\n\n\ngithub\n\n\nThe backend of the ixo protocol which defines the nodes that run the network\n\nTODO\n\n\nixo-Module\n\n\ngithub\n\n\nAn npm package that wrappers the communication to the ixo-node and provides usable services to a Javascript application.\n\nTODO\n\n\nixo-Web\n\n\ngithub\n\n\nA reference implemenation of a web frontend for the ixo protocol\n\nTODO\n\n\nmkdocs\n\n\ngithub\n\n\nThe repository contains the documentaion for the ixo system and is build using mkdocs.  It builds the content for this site.",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#documentation",
            "text": "The ixo project is made up of five key repositories namely:   schema    ixo-node  ixo-module    ixo-web    mkdocs   github",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#schema",
            "text": "github  A repository for holding schema templates for the ixo Protocol",
            "title": "Schema"
        },
        {
            "location": "/documentation/#folder-structure",
            "text": "/projects  - Project Templates  /agents  - Agent Templates  /claims  - Claim Templates  /evaluations  - Evaluation Templates",
            "title": "Folder Structure"
        },
        {
            "location": "/documentation/#template-schemas",
            "text": "All Templates follow the  JSON-LD  structure examples can be found at  Schema.org  Example:  {\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Organization\",\n  \"url\": \"http://www.example.com\",\n  \"name\": \"Unlimited Ball Bearings Corp.\",\n  \"contactPoint\": {\n    \"@type\": \"ContactPoint\",\n    \"telephone\": \"+1-401-555-1212\",\n    \"contactType\": \"Customer service\"\n  }\n}",
            "title": "Template Schemas"
        },
        {
            "location": "/documentation/#templates",
            "text": "Templates describe the labels, input type and the optionality of fields.  These are used on the client side for rendering schemas.  Templates consist of a single data element called  entities  which is an array of the fields/entities that need to be rendered on screen. Each entity has three mandatory values:  label  - The label for the input  name  - The name of the input which must be present in the schema and uses dot notation for complex types  type  - The which describes how the input should be captured  optional  - Determines whether the entity is required or optional (Defaults to  false )  options  - Only used if the type is  select  and contains a list of  labels  and  values .  hidden  - If  true  do not display this field.  Defaults to  false  Example:  \"options\": [\n  {\n    \"label\": \"Identity Document\", \n    \"value\": \"id\"\n  },\n  {\n    \"label\": \"Passport\",\n    \"value\": \"passport\"\n  }\n]",
            "title": "Templates"
        },
        {
            "location": "/documentation/#template-types",
            "text": "text  - Renders a text input  textarea  - Renders a multiline text input  country  - Renders a selection box containing a list of country names and returns the (ISO 3166-2)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]  select  - Generic selection box containing a list of options.  If this type is selected the  option  value must also be set.  image  - Renders an image or allows one to be uploaded",
            "title": "Template Types"
        },
        {
            "location": "/documentation/#ixo-node",
            "text": "github  The backend of the ixo protocol which defines the nodes that run the network TODO",
            "title": "ixo-Node"
        },
        {
            "location": "/documentation/#ixo-module",
            "text": "github  An npm package that wrappers the communication to the ixo-node and provides usable services to a Javascript application. TODO",
            "title": "ixo-Module"
        },
        {
            "location": "/documentation/#ixo-web",
            "text": "github  A reference implemenation of a web frontend for the ixo protocol TODO",
            "title": "ixo-Web"
        },
        {
            "location": "/documentation/#mkdocs",
            "text": "github  The repository contains the documentaion for the ixo system and is build using mkdocs.  It builds the content for this site.",
            "title": "mkdocs"
        },
        {
            "location": "/api/",
            "text": "API\n\n\nTODO\n\n\nixo-Node API\n\n\nThe ixo node uses JSON-RPC to receive client requests.  The structure of all calls follow the same structure:\n\n\nURI: \n<node server>/api/<entity>\n\n\nRequest type: \nPOST\n\n\nStructure: \n\n{\"jsonrpc\": \"2.0\", \"method\": \"<method name>\",  \"id\": <message id>,     \"params\": <json data object> }\n\n\n\n\n\n\n\n\nVariable\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<node server>\n\n\nThe URL of the server\n\n\n\n\n\n\n<entity>\n\n\nThe entity to send the method\n\n\n\n\n\n\n<method name>\n\n\nThe name of the method to call\n\n\n\n\n\n\n<message id>\n\n\nThe message ID, used to correlate asynchronous responses\n\n\n\n\n\n\n<json data object>\n\n\nThe parameters that are passed to the method handler\n\n\n\n\n\n\n\n\nStructure of params object\n\n\nEverything in the payload section is signed to create a signature.  It shoul dbe packed using \nJSON.stringify()\n method before signing. \n\n\n{\n    payload: {\n        \"did\": <did|publicKey of user>,\n        \"data\": <request data>\n    },\n    \"signature\": {\n        \"type\": <signature type ECDSA or E25519>,\n        \"created\": <date of signature>,\n        \"creator\": <did|publicKey of user>,\n        \"signature\": <signature in hex>\n    }\n}\n\n\n\n\nNetwork\n\n\nExample URI: https://ixo-node.herokuapp.com/api/network\n\n\nPing\n\n\nPings the network to ensure connectivity.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"ping\", \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": \"pong\"}\n\n\n\n\nProject\n\n\nExample URI: https://ixo-node.herokuapp.com/api/project\n\n\nGet Template\n\n\nRetrieves the project template from the template registry.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\":<project template name>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}\n\n\n\n\nCreate Project\n\n\nCreates a new project.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\":{\n            \"did\":<did of user>,\n            \"template\": {\n                name: <template name>\n            },\n            \"data\": <project data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <project data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}\n\n\n\n\nList Projects\n\n\nLists all new projects.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"list\", \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}\n\n\n\n\nList Projects for a specific DID\n\n\nLists all projects owned by a specific DID.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}\n\n\n\n\nTemplate\n\n\nExample URI: https://ixo-node.herokuapp.com/api/template\n\n\nGet Template\n\n\nRetrieves a template from the template registry. Valid types are: 'project', 'agent', claim' or 'evaluation'\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"type\": <template type>, \"name\": <name of template>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}\n\n\n\n\nAgent\n\n\nExample URI: https://ixo-node.herokuapp.com/api/agent\n\n\nGet Template\n\n\nRetrieves the agent template called \"default\" from the template registry.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\": <name of agent template>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}\n\n\n\n\nCreate Agent\n\n\nCreates a new agent.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                name: <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": <agent data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <cedator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}\n\n\n\n\nList Agents for a specific DID\n\n\nLists all agents for a specific DID.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}\n\n\n\n\nList Agents for a specific DID\n\n\nLists all agents for a specific DID.\n\n\nRequest:\n\n\n{\"jsonrpc\": \"2.0\", \"method\": \"listForProject\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project TX>}}}, \"id\": 1}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}\n\n\n\n\nixo-Module API",
            "title": "API"
        },
        {
            "location": "/api/#api",
            "text": "TODO",
            "title": "API"
        },
        {
            "location": "/api/#ixo-node-api",
            "text": "The ixo node uses JSON-RPC to receive client requests.  The structure of all calls follow the same structure:  URI:  <node server>/api/<entity>  Request type:  POST  Structure:  {\"jsonrpc\": \"2.0\", \"method\": \"<method name>\",  \"id\": <message id>,     \"params\": <json data object> }     Variable  Description      <node server>  The URL of the server    <entity>  The entity to send the method    <method name>  The name of the method to call    <message id>  The message ID, used to correlate asynchronous responses    <json data object>  The parameters that are passed to the method handler",
            "title": "ixo-Node API"
        },
        {
            "location": "/api/#structure-of-params-object",
            "text": "Everything in the payload section is signed to create a signature.  It shoul dbe packed using  JSON.stringify()  method before signing.   {\n    payload: {\n        \"did\": <did|publicKey of user>,\n        \"data\": <request data>\n    },\n    \"signature\": {\n        \"type\": <signature type ECDSA or E25519>,\n        \"created\": <date of signature>,\n        \"creator\": <did|publicKey of user>,\n        \"signature\": <signature in hex>\n    }\n}",
            "title": "Structure of params object"
        },
        {
            "location": "/api/#network",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/network",
            "title": "Network"
        },
        {
            "location": "/api/#ping",
            "text": "Pings the network to ensure connectivity.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"ping\", \"id\": 1}  Response:  {\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": \"pong\"}",
            "title": "Ping"
        },
        {
            "location": "/api/#project",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/project",
            "title": "Project"
        },
        {
            "location": "/api/#get-template",
            "text": "Retrieves the project template from the template registry.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\":<project template name>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}",
            "title": "Get Template"
        },
        {
            "location": "/api/#create-project",
            "text": "Creates a new project.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\":{\n            \"did\":<did of user>,\n            \"template\": {\n                name: <template name>\n            },\n            \"data\": <project data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <project data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}",
            "title": "Create Project"
        },
        {
            "location": "/api/#list-projects",
            "text": "Lists all new projects.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"list\", \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}",
            "title": "List Projects"
        },
        {
            "location": "/api/#list-projects-for-a-specific-did",
            "text": "Lists all projects owned by a specific DID.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of projects>\n}",
            "title": "List Projects for a specific DID"
        },
        {
            "location": "/api/#template",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/template",
            "title": "Template"
        },
        {
            "location": "/api/#get-template_1",
            "text": "Retrieves a template from the template registry. Valid types are: 'project', 'agent', claim' or 'evaluation'  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"type\": <template type>, \"name\": <name of template>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}",
            "title": "Get Template"
        },
        {
            "location": "/api/#agent",
            "text": "Example URI: https://ixo-node.herokuapp.com/api/agent",
            "title": "Agent"
        },
        {
            "location": "/api/#get-template_2",
            "text": "Retrieves the agent template called \"default\" from the template registry.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"getTemplate\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"name\": <name of agent template>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"template\": <the template>,\n        \"form\": <template's corresponding form>\n    }\n}",
            "title": "Get Template"
        },
        {
            "location": "/api/#create-agent",
            "text": "Creates a new agent.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"create\", \n    \"id\": 3, \n    \"params\": {\n        payload: {\n            \"template\": {\n                name: <template name>\n            },\n            \"did\": <did of user>,\n            \"data\": <agent data>\n        },\n        \"signature\": {\n            \"type\": \"ECDSA\",\n            \"created\": \"2016-02-08T16:02:20Z\", \n            \"creator\": <did of user>,\n            \"signature\": <signature>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <cedator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"created\": \"2018-01-23T07:13:31.060Z\"\n    }\n}",
            "title": "Create Agent"
        },
        {
            "location": "/api/#list-agents-for-a-specific-did",
            "text": "Lists all agents for a specific DID.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForDID\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"did\":<did of owner>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}",
            "title": "List Agents for a specific DID"
        },
        {
            "location": "/api/#list-agents-for-a-specific-did_1",
            "text": "Lists all agents for a specific DID.  Request:  {\"jsonrpc\": \"2.0\", \"method\": \"listForProject\", \"params\": {\"payload\":{\"did\":<did of user>,\"data\":{\"projectTx\":<project TX>}}}, \"id\": 1}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": <array of agents>\n}",
            "title": "List Agents for a specific DID"
        },
        {
            "location": "/api/#ixo-module-api",
            "text": "",
            "title": "ixo-Module API"
        }
    ]
}