{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to the ixo Protocol\n\n\nPlease have a look at the \nixo Foundation website\n for more information on what we do.\n\n\nIntroduction\n\n\nThe documentation on this site is aimed at technical people who wish to understand the inner workings of the ixo protocol, how it works and how to integrate your applications and systems into the protocol.\n\n\nIn simple terms, the ixo protocol allows for the creating of projects in persuit of the UN's sustainable development goals. People, systems or IOT devices can then submit claims regarding \nthe work performed against these projects.  This work is then evaluated for accuracy and authenticity by evaluators.  Evaluators may also be people, systems or evaluation oracles that could pull in vast amounts of data to determine the evaluation result.\n\n\nOverview of the Architecture\n\n\nThe ixo platform is managed by a number of components and systems that interoperate in order to provide the full services that the ixo protocol offers.\n\n\n\n\nFor futher information see the \ndocumentation on our components\n.\n\n\nThe ixo Blockchain\n\n\nThe ixo blockchain contains the records of evey claim that is issued against a project the the subsequent evaluation of those claims.  Each record is validated by a quorum of validator nodes before it is written to the chain and thereafter the record cannot be removed or updated.  This data is then aggegated to build out the final states of the projects.\n\n\nAll the information on the ixo blockchain is publically avaialble through the ixo Explorer. This data includes the project information, stats regarding the project, the stakeholders of the project and the structure of data being captured against the project.  All actual claim data is stored in the Project Datastore.\n\n\nPrivacy of Data\n\n\nMuch of the data that is captured within a claim is highly sensive in nature.  This data might have specific regulator requirements such as GDPR or maybe the data may not reside outside certain geographical boundaries.  In order to comply with this and to also put the data into the hands of the owners of the project we have created the concept of independant data stores for each project.\n\n\nThe ixo Blockchain keeps a link to the location of these project data stores and provides services to the project data that are goverened by cryptographic access controls.\n\n\nSecurity\n\n\nAll requests to that create data or access sensitive data require cryptographic signatures and a capabilities model supports this to provide finer grained access control.\n\n\nPilots\n\n\nAmply\n\n\nAmply is a MVP project that we have built to prove the utility of the ixo protocol.  The code for this project can be found on our \nAmply github repository\n.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-the-ixo-protocol",
            "text": "Please have a look at the  ixo Foundation website  for more information on what we do.",
            "title": "Welcome to the ixo Protocol"
        },
        {
            "location": "/#introduction",
            "text": "The documentation on this site is aimed at technical people who wish to understand the inner workings of the ixo protocol, how it works and how to integrate your applications and systems into the protocol.  In simple terms, the ixo protocol allows for the creating of projects in persuit of the UN's sustainable development goals. People, systems or IOT devices can then submit claims regarding \nthe work performed against these projects.  This work is then evaluated for accuracy and authenticity by evaluators.  Evaluators may also be people, systems or evaluation oracles that could pull in vast amounts of data to determine the evaluation result.",
            "title": "Introduction"
        },
        {
            "location": "/#overview-of-the-architecture",
            "text": "The ixo platform is managed by a number of components and systems that interoperate in order to provide the full services that the ixo protocol offers.   For futher information see the  documentation on our components .",
            "title": "Overview of the Architecture"
        },
        {
            "location": "/#the-ixo-blockchain",
            "text": "The ixo blockchain contains the records of evey claim that is issued against a project the the subsequent evaluation of those claims.  Each record is validated by a quorum of validator nodes before it is written to the chain and thereafter the record cannot be removed or updated.  This data is then aggegated to build out the final states of the projects.  All the information on the ixo blockchain is publically avaialble through the ixo Explorer. This data includes the project information, stats regarding the project, the stakeholders of the project and the structure of data being captured against the project.  All actual claim data is stored in the Project Datastore.",
            "title": "The ixo Blockchain"
        },
        {
            "location": "/#privacy-of-data",
            "text": "Much of the data that is captured within a claim is highly sensive in nature.  This data might have specific regulator requirements such as GDPR or maybe the data may not reside outside certain geographical boundaries.  In order to comply with this and to also put the data into the hands of the owners of the project we have created the concept of independant data stores for each project.  The ixo Blockchain keeps a link to the location of these project data stores and provides services to the project data that are goverened by cryptographic access controls.",
            "title": "Privacy of Data"
        },
        {
            "location": "/#security",
            "text": "All requests to that create data or access sensitive data require cryptographic signatures and a capabilities model supports this to provide finer grained access control.",
            "title": "Security"
        },
        {
            "location": "/#pilots",
            "text": "",
            "title": "Pilots"
        },
        {
            "location": "/#amply",
            "text": "Amply is a MVP project that we have built to prove the utility of the ixo protocol.  The code for this project can be found on our  Amply github repository .",
            "title": "Amply"
        },
        {
            "location": "/documentation/",
            "text": "Documentation\n\n\nThe ixo project is made up of the following key components namely:\n\n\n\n\nWeb Portal\n\n\nKeysafe Browser Extension\n\n\nixo NPM Module\n \n\n\nProject Datastore\n\n\nixo Blockchain\n\n\nixo Explorer\n\n\nSchemas\n \n\n\nDocumentation\n \n\n\n\n\n\n\nWeb Portal\n\n\n \nhttps://github.com/ixofoundation/ixo-web\n\n\nA reference implementation of the web portal of the ixo protocol\n\nTODO\n\n\nKeysafe Browser Extension\n\n\n \nhttps://github.com/ixofoundation/ixo-keysafe-browser-extension\n\n\nThe ixo-keysafe-browser-extension provides signing capabilities for the ixo web frontend. It is fork from the \nMetaMask\n browser extension, but now uses Sovrin generated DID's as user credentials.\n\n\nixo NPM Module\n\n\n \nhttps://github.com/ixofoundation/ixo-module\n\n\nAn npm package that wrappers the communication to the ixo backend services and provides usable services to a Javascript application.\n\nTODO\n\n\nProject Datastore\n\n\n \nhttps://github.com/ixofoundation/ixo-pds\n\n\nA reference implemenation of a project data store. The ixo-pds builds a fully functional docker image to process and store claims and evaluations and then adds a record of these interactoins to the ixo Blockchain\n\n\nTODO\n\n\nixo Blockchain\n\n\n \nhttps://github.com/ixofoundation/ixo-cosmos\n\n\nBuilt on top of Tendermint and using the cosmos SDK, the ixo blockchain records the projects, claims and evaluations that are created through using the ixo-protocol\n\n\nixo Explorer\n\n\n \nhttps://github.com/ixofoundation/ixo-block-sync\n\n\nThe ixo Explorer provides a set of simple API's to access the publically available project documentation.  It synchronises off the ixo blockchain and stores the current state of projects.\n\n\nSchemas\n\n\n \nhttps://github.com/ixofoundation/schem\n\n\nA repository for holding schema templates for the ixo Protocol\n\n\nFolder Structure\n\n\n/projects\n - Project Templates\n\n\n/agents\n - Agent Templates\n\n\n/claims\n - Claim Templates\n\n\n/evaluations\n - Evaluation Templates\n\n\nTemplate Schemas\n\n\nAll Templates follow the \nJSON-LD\n structure examples can be found at \nSchema.org\n\n\nExample:\n\n\n{\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Organization\",\n  \"url\": \"http://www.example.com\",\n  \"name\": \"Unlimited Ball Bearings Corp.\",\n  \"contactPoint\": {\n    \"@type\": \"ContactPoint\",\n    \"telephone\": \"+1-401-555-1212\",\n    \"contactType\": \"Customer service\"\n  }\n}\n\n\n\n\nTemplates\n\n\nTemplates describe the labels, input type and the optionality of fields.  These are used on the client side for rendering schemas.\n\n\nTemplates consist of a single data element called \nentities\n which is an array of the fields/entities that need to be rendered on screen. Each entity has three mandatory values:\n\n\nlabel\n - The label for the input\n\n\nname\n - The name of the input which must be present in the schema and uses dot notation for complex types\n\n\ntype\n - The which describes how the input should be captured\n\n\noptional\n - Determines whether the entity is required or optional (Defaults to \nfalse\n)\n\n\noptions\n - Only used if the type is \nselect\n and contains a list of \nlabels\n and \nvalues\n.\n\n\nhidden\n - If \ntrue\n do not display this field.  Defaults to \nfalse\n\n\nExample:\n\n\n\"options\": [\n  {\n    \"label\": \"Identity Document\", \n    \"value\": \"id\"\n  },\n  {\n    \"label\": \"Passport\",\n    \"value\": \"passport\"\n  }\n]\n\n\n\n\nTemplate Types\n\n\ntext\n - Renders a text input\n\n\ntextarea\n - Renders a multiline text input\n\n\ncountry\n - Renders a selection box containing a list of country names and returns the (ISO 3166-2)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]\n\n\nselect\n - Generic selection box containing a list of options.  If this type is selected the \noption\n value must also be set.\n\n\nimage\n - Renders an image or allows one to be uploaded\n\n\nDocumentation\n\n\n \nhttps://github.com/ixofoundation/mkdocs\n\n\nThe repository contains the documentaion for the ixo system and is build using mkdocs.  It builds the content for this site.",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#documentation",
            "text": "The ixo project is made up of the following key components namely:   Web Portal  Keysafe Browser Extension  ixo NPM Module    Project Datastore  ixo Blockchain  ixo Explorer  Schemas    Documentation",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#web-portal",
            "text": "https://github.com/ixofoundation/ixo-web  A reference implementation of the web portal of the ixo protocol TODO",
            "title": "Web Portal"
        },
        {
            "location": "/documentation/#keysafe-browser-extension",
            "text": "https://github.com/ixofoundation/ixo-keysafe-browser-extension  The ixo-keysafe-browser-extension provides signing capabilities for the ixo web frontend. It is fork from the  MetaMask  browser extension, but now uses Sovrin generated DID's as user credentials.",
            "title": "Keysafe Browser Extension"
        },
        {
            "location": "/documentation/#ixo-npm-module",
            "text": "https://github.com/ixofoundation/ixo-module  An npm package that wrappers the communication to the ixo backend services and provides usable services to a Javascript application. TODO",
            "title": "ixo NPM Module"
        },
        {
            "location": "/documentation/#project-datastore",
            "text": "https://github.com/ixofoundation/ixo-pds  A reference implemenation of a project data store. The ixo-pds builds a fully functional docker image to process and store claims and evaluations and then adds a record of these interactoins to the ixo Blockchain  TODO",
            "title": "Project Datastore"
        },
        {
            "location": "/documentation/#ixo-blockchain",
            "text": "https://github.com/ixofoundation/ixo-cosmos  Built on top of Tendermint and using the cosmos SDK, the ixo blockchain records the projects, claims and evaluations that are created through using the ixo-protocol",
            "title": "ixo Blockchain"
        },
        {
            "location": "/documentation/#ixo-explorer",
            "text": "https://github.com/ixofoundation/ixo-block-sync  The ixo Explorer provides a set of simple API's to access the publically available project documentation.  It synchronises off the ixo blockchain and stores the current state of projects.",
            "title": "ixo Explorer"
        },
        {
            "location": "/documentation/#schemas",
            "text": "https://github.com/ixofoundation/schem  A repository for holding schema templates for the ixo Protocol",
            "title": "Schemas"
        },
        {
            "location": "/documentation/#folder-structure",
            "text": "/projects  - Project Templates  /agents  - Agent Templates  /claims  - Claim Templates  /evaluations  - Evaluation Templates",
            "title": "Folder Structure"
        },
        {
            "location": "/documentation/#template-schemas",
            "text": "All Templates follow the  JSON-LD  structure examples can be found at  Schema.org  Example:  {\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Organization\",\n  \"url\": \"http://www.example.com\",\n  \"name\": \"Unlimited Ball Bearings Corp.\",\n  \"contactPoint\": {\n    \"@type\": \"ContactPoint\",\n    \"telephone\": \"+1-401-555-1212\",\n    \"contactType\": \"Customer service\"\n  }\n}",
            "title": "Template Schemas"
        },
        {
            "location": "/documentation/#templates",
            "text": "Templates describe the labels, input type and the optionality of fields.  These are used on the client side for rendering schemas.  Templates consist of a single data element called  entities  which is an array of the fields/entities that need to be rendered on screen. Each entity has three mandatory values:  label  - The label for the input  name  - The name of the input which must be present in the schema and uses dot notation for complex types  type  - The which describes how the input should be captured  optional  - Determines whether the entity is required or optional (Defaults to  false )  options  - Only used if the type is  select  and contains a list of  labels  and  values .  hidden  - If  true  do not display this field.  Defaults to  false  Example:  \"options\": [\n  {\n    \"label\": \"Identity Document\", \n    \"value\": \"id\"\n  },\n  {\n    \"label\": \"Passport\",\n    \"value\": \"passport\"\n  }\n]",
            "title": "Templates"
        },
        {
            "location": "/documentation/#template-types",
            "text": "text  - Renders a text input  textarea  - Renders a multiline text input  country  - Renders a selection box containing a list of country names and returns the (ISO 3166-2)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]  select  - Generic selection box containing a list of options.  If this type is selected the  option  value must also be set.  image  - Renders an image or allows one to be uploaded",
            "title": "Template Types"
        },
        {
            "location": "/documentation/#documentation_1",
            "text": "https://github.com/ixofoundation/mkdocs  The repository contains the documentaion for the ixo system and is build using mkdocs.  It builds the content for this site.",
            "title": "Documentation"
        },
        {
            "location": "/api/",
            "text": "API\n\n\nThe ixo platform has a number of different components that each has a set of APIs\n\n\nixo module API\n\n\nInstall using npm\n\n\nnpm install --save ixo-module\n\n\nCreate new Ixo Object (Without provider)\n\n\nimport Ixo from 'ixo-module';\nvar ixo = new Ixo('ixo_node_url')\n\n\n\n\n\n\nTODO *\n\n\n\n\nKeysafe Browser Extension API\n\n\n\n\nTodo *\n\n\n\n\nProject Datastore API\n\n\nIntroduction\n\n\nThe project data store holds the data relating to projects.  The API is split into a public API and a non public API. The public API requests do not require cryptographic signatures, while all other requests must be signed and adher to the capabilities that have been granted to the signer.\n\n\nPublic API\n\n\n*Todo\n\n\nUpload an image\n\n\nFetch image\n\n\nUpload a Json file\n\n\nFetch Json file*\n\n\nPrivate API\n\n\nThe ixo project data store (pds) uses JSON-RPC to receive client requests.  The structure of all calls follow the same structure:\n\n\nURI: \n<pds server>/api/request\n\n\nRequest type: \nPOST\n\n\nStructure: \n\n{\"jsonrpc\": \"2.0\", \"method\": \"<method name>\",  \"id\": <message id>,     \"params\": <json data object> }\n\n\n\n\n\n\n\n\nVariable\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n<node server>\n\n\nThe URL of the server\n\n\n\n\n\n\n<entity>\n\n\nThe entity to send the method\n\n\n\n\n\n\n<method name>\n\n\nThe name of the method to call defined in the config file\n\n\n\n\n\n\n<message id>\n\n\nThe message ID, used to correlate asynchronous responses\n\n\n\n\n\n\n<json data object>\n\n\nThe parameters that are passed to the method handler\n\n\n\n\n\n\n\n\nStructure of params object\n\n\nEverything in the payload section is signed to create a signature.  It should be packed using \nJSON.stringify()\n method before signing. \n\n\n{\n    \"jsonrpc\":\"2.0\", \n    \"method\":\"createAgent\",\n    \"id\": 123,\n    \"params\": {\n        \"payload\": {\n\n            \"template\": {\n                \"name\": \"create_agent\"\n            },\n            \"data\": {\"projectDid\": \"did:ixo:TknEju4pjyRQvVehivZ82x\",\n                     \"name\": \"Brennon\",\n                     \"surname\": \"Hampton\",\n                     \"email\": \"brennon@me.com\",\n                     \"agentDid\": \"did:sov:64\",\n                     \"role\": \"SA\"}\n        },\n        \"signature\": {\n            \"type\": \"ed25519-sha-256\",\n            \"created\": \"2018-06-27T16:02:20Z\", \n            \"creator\": \"did:sov:2p19P17cr6XavfMJ8htYSS\",\n            \"signatureValue\": \"A011D11A2D91A9CB03ECFFB7D9AFC1001DB56B3DABF42BDD0F4D00352A9B8E0E73E85F0B4586DA2934696C0A78602EEB047EA6B3D9096C1A0C3FB144E6A51C09\"\n        }\n    }\n}\n\n\n\n\n\nCreate Project\n\n\nCreates a new project.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"createProject\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <create project data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <project data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n    }\n}\n\n\n\n\nCreate Agent\n\n\nCreates a new agent.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"createAgent\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <create agent data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"version\": 1\n    }\n}\n\n\n\n\nUpdate Agent Status\n\n\nUpdate Agent Status\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"updateAgentStatus\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <update agent data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"version\": 1\n    }\n}\n\n\n\n\nList Agents\n\n\nList claims and latest status.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"listAgents\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <data to filter>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": [\n        {\n            <agent data>,\n            \"currentStatus\": {\n                <agent status data>\n            }\n        }\n    ]\n}\n\n\n\n\nSubmit Claim\n\n\nCreates a new claim.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"submitClaim\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <usubmit claim data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\"\n    }\n}\n\n\n\n\nEvaluate Claim\n\n\nEvaluate a new claim.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"evaluateClaim\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <evaluate claim data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"version\": 1\n    }\n}\n\n\n\n\nList Claim\n\n\nList claims and latest status.\n\n\nRequest:\n\n\n{\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"listClaims\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <data to filter>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}\n\n\n\n\nResponse:\n\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": [\n        {\n            <claim data>,\n            \"evaluations\": {\n                <claim status data>\n            }\n        }\n    ]\n}\n\n\n\n\nixo Blockchain API\n\n\n\n\nTODO *\n\n\n\n\nixo Explorer API\n\n\n\n\nTODO *",
            "title": "API"
        },
        {
            "location": "/api/#api",
            "text": "The ixo platform has a number of different components that each has a set of APIs",
            "title": "API"
        },
        {
            "location": "/api/#ixo-module-api",
            "text": "",
            "title": "ixo module API"
        },
        {
            "location": "/api/#install-using-npm",
            "text": "npm install --save ixo-module",
            "title": "Install using npm"
        },
        {
            "location": "/api/#create-new-ixo-object-without-provider",
            "text": "import Ixo from 'ixo-module';\nvar ixo = new Ixo('ixo_node_url')   TODO *",
            "title": "Create new Ixo Object (Without provider)"
        },
        {
            "location": "/api/#keysafe-browser-extension-api",
            "text": "Todo *",
            "title": "Keysafe Browser Extension API"
        },
        {
            "location": "/api/#project-datastore-api",
            "text": "",
            "title": "Project Datastore API"
        },
        {
            "location": "/api/#introduction",
            "text": "The project data store holds the data relating to projects.  The API is split into a public API and a non public API. The public API requests do not require cryptographic signatures, while all other requests must be signed and adher to the capabilities that have been granted to the signer.",
            "title": "Introduction"
        },
        {
            "location": "/api/#public-api",
            "text": "*Todo  Upload an image  Fetch image  Upload a Json file  Fetch Json file*",
            "title": "Public API"
        },
        {
            "location": "/api/#private-api",
            "text": "The ixo project data store (pds) uses JSON-RPC to receive client requests.  The structure of all calls follow the same structure:  URI:  <pds server>/api/request  Request type:  POST  Structure:  {\"jsonrpc\": \"2.0\", \"method\": \"<method name>\",  \"id\": <message id>,     \"params\": <json data object> }     Variable  Description      <node server>  The URL of the server    <entity>  The entity to send the method    <method name>  The name of the method to call defined in the config file    <message id>  The message ID, used to correlate asynchronous responses    <json data object>  The parameters that are passed to the method handler",
            "title": "Private API"
        },
        {
            "location": "/api/#structure-of-params-object",
            "text": "Everything in the payload section is signed to create a signature.  It should be packed using  JSON.stringify()  method before signing.   {\n    \"jsonrpc\":\"2.0\", \n    \"method\":\"createAgent\",\n    \"id\": 123,\n    \"params\": {\n        \"payload\": {\n\n            \"template\": {\n                \"name\": \"create_agent\"\n            },\n            \"data\": {\"projectDid\": \"did:ixo:TknEju4pjyRQvVehivZ82x\",\n                     \"name\": \"Brennon\",\n                     \"surname\": \"Hampton\",\n                     \"email\": \"brennon@me.com\",\n                     \"agentDid\": \"did:sov:64\",\n                     \"role\": \"SA\"}\n        },\n        \"signature\": {\n            \"type\": \"ed25519-sha-256\",\n            \"created\": \"2018-06-27T16:02:20Z\", \n            \"creator\": \"did:sov:2p19P17cr6XavfMJ8htYSS\",\n            \"signatureValue\": \"A011D11A2D91A9CB03ECFFB7D9AFC1001DB56B3DABF42BDD0F4D00352A9B8E0E73E85F0B4586DA2934696C0A78602EEB047EA6B3D9096C1A0C3FB144E6A51C09\"\n        }\n    }\n}",
            "title": "Structure of params object"
        },
        {
            "location": "/api/#create-project",
            "text": "Creates a new project.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"createProject\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <create project data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <project data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n    }\n}",
            "title": "Create Project"
        },
        {
            "location": "/api/#create-agent",
            "text": "Creates a new agent.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"createAgent\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <create agent data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"version\": 1\n    }\n}",
            "title": "Create Agent"
        },
        {
            "location": "/api/#update-agent-status",
            "text": "Update Agent Status  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"updateAgentStatus\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <update agent data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <agent data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"did\": <creator's did>\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"version\": 1\n    }\n}",
            "title": "Update Agent Status"
        },
        {
            "location": "/api/#list-agents",
            "text": "List claims and latest status.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"listAgents\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <data to filter>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": [\n        {\n            <agent data>,\n            \"currentStatus\": {\n                <agent status data>\n            }\n        }\n    ]\n}",
            "title": "List Agents"
        },
        {
            "location": "/api/#submit-claim",
            "text": "Creates a new claim.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"submitClaim\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <usubmit claim data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\"\n    }\n}",
            "title": "Submit Claim"
        },
        {
            "location": "/api/#evaluate-claim",
            "text": "Evaluate a new claim.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"evaluateClaim\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <evaluate claim data>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": {\n        \"__v\": 0,\n        <claim data>\n        \"tx\": \"b51cd2665d146d0a0240fd2756beb4c9e9c1948275ac5d37a7ae405ab2d71a7a\",\n        \"_id\": \"5a66e09b38f45f01d90d122a\",\n        \"version\": 1\n    }\n}",
            "title": "Evaluate Claim"
        },
        {
            "location": "/api/#list-claim",
            "text": "List claims and latest status.  Request:  {\n    \"jsonrpc\": \"2.0\", \n    \"method\": \"listClaims\", \n    \"id\": 3, \n    \"params\": {\n        \"payload\": {        \n            \"template\": {\n                \"name\": \"<template to validate>\"\n            },\n            \"data\": {\n                <data to filter>\n            }\n        },\n        \"signature\": {\n            \"type\": <signature type ECDSA or E25519>,\n            \"created\": <date of signature>, \n            \"creator\": <user did>,\n            \"signatureValue\":  <signature in hex>\n        }\n    }\n}  Response:  {\n    \"jsonrpc\": \"2.0\",\n    \"id\": 3,\n    \"result\": [\n        {\n            <claim data>,\n            \"evaluations\": {\n                <claim status data>\n            }\n        }\n    ]\n}",
            "title": "List Claim"
        },
        {
            "location": "/api/#ixo-blockchain-api",
            "text": "TODO *",
            "title": "ixo Blockchain API"
        },
        {
            "location": "/api/#ixo-explorer-api",
            "text": "TODO *",
            "title": "ixo Explorer API"
        }
    ]
}